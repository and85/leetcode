public class Knapsack01
{
    /*
    Given weights and values of N items, 
    put these items in a knapsack of capacity W to get the maximum total value in the knapsack. 
    In other words, given two integer arrays val[0..N-1] and wt[0..N-1] which represent values 
    and weights associated with N items respectively. 
    Also given an integer W which represents knapsack capacity, find out the maximum value subset of 
    val[] such that the sum of the weights of this subset is smaller than or equal to W. 
    You CANNOT break an item, either pick the complete item or donâ€™t pick it (0-1 property)
    */
    public static int KnapSack(int W, int[] wt, int[] val, int n)
    {
        // dp implementation: https://www.youtube.com/watch?v=8LusJS5-AGo
        return 0;
    }
}